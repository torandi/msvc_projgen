<build>
	<solution name="test">
		<platforms>
			<platform>Win32</platform>
			<platform>x64</platform>
		</platforms>
		<configurations>
			<shared>
				<PlatformToolset>v120</PlatformToolset>
				
				<IntDir>$(SolutionDir)Build\$(Configuration)\$(ProjectName)\</IntDir>
				<OutDir>$(SolutionDir)Bin\$(Configuration)\</OutDir>
				
				<compile>
				     <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)/../src;$(SolutionDir)/../include;$(SolutionDir)/generated;$(SolutionDir)/generated/src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
					  <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;%(PreprocessorDefinitions)</PreprocessorDefinitions>
					  <MultiProcessorCompilation>true</MultiProcessorCompilation>
					  <MinimalRebuild>false</MinimalRebuild>
					  <Optimization>MaxSpeed</Optimization>
					  <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>
					  <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
				</compile>
				
				<!-- apply custom build rules on files matching pattern -->
				<compile files="*.ffs.cpp">
					<exclude>true</exclude>
					<!-- you can add any compile options here -->
				</compile>
			</shared>
			
			<configuration name="Debug">
				<UseDebugLibraries>false</UseDebugLibraries>
				<WholeProgramOptimization>false</WholeProgramOptimization>
				<compile>
					<Optimization>Disabled</Optimization>
				</compile>
				<link>
					<SubSystem>Console</SubSystem>
				</link>
			</configuration>
			
			<configuration name="Release">
			</configuration>
		</configurations>
		
		<targets>
			<include>hpp</include>
			<compile>cpp</compile>
			
			 <!-- Custom target can be defined in multiple ways: -->
			 
			<custom name="test">test</custom> <!-- target test for files ending in .test -->
			
			<custom name="ffsc" definition="ffsc.targets">
				<extension>ffs</extension>
				<generate filter="generated">$(ProjectPath)/generated/$(ProjectRelativeDirectory)/$(FileBasename).cpp</generate>
				<generate filter="generated">$(ProjectPath)/generated/$(ProjectRelativeDirectory)/$(FileBasename).hpp</generate>
			</custom>
			<custom name="ffsc_config"/> <!-- ffsc_config is defined in ffsc.targets above -->
		</targets>

		<project external="ffsc/ffsc.csproj"/>
		
		<import file="src/libffs.build"/>
	</solution>
</build>